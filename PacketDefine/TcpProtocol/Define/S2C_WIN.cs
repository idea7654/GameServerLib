// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace TcpProtocol.Define
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct S2C_WIN : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static S2C_WIN GetRootAsS2C_WIN(ByteBuffer _bb) { return GetRootAsS2C_WIN(_bb, new S2C_WIN()); }
  public static S2C_WIN GetRootAsS2C_WIN(ByteBuffer _bb, S2C_WIN obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S2C_WIN __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Playernum { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Playerone { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Playertwo { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Playerthree { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Playerfour { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<TcpProtocol.Define.S2C_WIN> CreateS2C_WIN(FlatBufferBuilder builder,
      int playernum = 0,
      int playerone = 0,
      int playertwo = 0,
      int playerthree = 0,
      int playerfour = 0) {
    builder.StartTable(5);
    S2C_WIN.AddPlayerfour(builder, playerfour);
    S2C_WIN.AddPlayerthree(builder, playerthree);
    S2C_WIN.AddPlayertwo(builder, playertwo);
    S2C_WIN.AddPlayerone(builder, playerone);
    S2C_WIN.AddPlayernum(builder, playernum);
    return S2C_WIN.EndS2C_WIN(builder);
  }

  public static void StartS2C_WIN(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddPlayernum(FlatBufferBuilder builder, int playernum) { builder.AddInt(0, playernum, 0); }
  public static void AddPlayerone(FlatBufferBuilder builder, int playerone) { builder.AddInt(1, playerone, 0); }
  public static void AddPlayertwo(FlatBufferBuilder builder, int playertwo) { builder.AddInt(2, playertwo, 0); }
  public static void AddPlayerthree(FlatBufferBuilder builder, int playerthree) { builder.AddInt(3, playerthree, 0); }
  public static void AddPlayerfour(FlatBufferBuilder builder, int playerfour) { builder.AddInt(4, playerfour, 0); }
  public static Offset<TcpProtocol.Define.S2C_WIN> EndS2C_WIN(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<TcpProtocol.Define.S2C_WIN>(o);
  }
};


}
